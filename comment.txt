Dockerfile
(1)
コンテナで npm を使用したい場合
1. あらかじめ npm がインストールされた Base Image を使用（今回はこちら）
2. RUN で npmをインストール

FROM node だと余分なプログラムもついてくるので今回は :alpine でバージョンを指定
（alpineは基本的に最小限の機能しか持たない）

(2)
WORKDIRについて
コンテナのルートディレクトリで作業を行うのは悪い慣習なので、コマンドを実行するディレクトリのパスを指定している（基本的に /usr/app で良いでしょう）。
以降のコマンドも指定したディレクトリで実行される。
（そもそも、ルートディレクトリで npm install を実行するとエラーを起こす）

(3)
COPY ./ ./
第一引数で指定されたディレクトリの中身を
第二引数で指定されたコンテナのディレクトリにコピーする
ここで、第一引数のパスは build context を基点とした相対パス
（ build context は docker run . における . のこと）
第二引数のパスはWORKDIRで指定されたディレクトリを基点とした相対パスであることに注意
こうすることでプロジェクト内のデータをコンテナに収められる
こうしないとコンテナ内には Base Image の File System Snapshot しか存在しないことになる

(4)
COPY ./package.json ./
RUN npm install
COPY ./ ./

dependenciesに変更があった場合のみ npm install を行う。こうすることでリビルドする度に必要のない npm install の繰り返しを防ぐことができる。

(5)
CMD ["npm", "start"] は "npm start" というコマンドを実行することを意味する。
配列で区切っているのはDockerの仕様。



package.json
(1)
* はどのバージョンでもよいということ
